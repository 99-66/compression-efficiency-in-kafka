// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: music/music.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Music struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuySeq         string `protobuf:"bytes,1,opt,name=buy_seq,json=buySeq,proto3" json:"buy_seq,omitempty"`
	ProductCd      string `protobuf:"bytes,2,opt,name=product_cd,json=productCd,proto3" json:"product_cd,omitempty"`
	BuyId          string `protobuf:"bytes,3,opt,name=buy_id,json=buyId,proto3" json:"buy_id,omitempty"`
	ProductSeq     string `protobuf:"bytes,4,opt,name=product_seq,json=productSeq,proto3" json:"product_seq,omitempty"`
	ProductNm      string `protobuf:"bytes,5,opt,name=product_nm,json=productNm,proto3" json:"product_nm,omitempty"`
	BuyNm          string `protobuf:"bytes,6,opt,name=buy_nm,json=buyNm,proto3" json:"buy_nm,omitempty"`
	BeforeMyMoney  string `protobuf:"bytes,7,opt,name=before_my_money,json=beforeMyMoney,proto3" json:"before_my_money,omitempty"`
	SendStatus     string `protobuf:"bytes,8,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`
	ProductCnt     string `protobuf:"bytes,9,opt,name=product_cnt,json=productCnt,proto3" json:"product_cnt,omitempty"`
	SendCnt        string `protobuf:"bytes,10,opt,name=send_cnt,json=sendCnt,proto3" json:"send_cnt,omitempty"`
	DenyCnt        string `protobuf:"bytes,11,opt,name=deny_cnt,json=denyCnt,proto3" json:"deny_cnt,omitempty"`
	ReceiveCnt     string `protobuf:"bytes,12,opt,name=receive_cnt,json=receiveCnt,proto3" json:"receive_cnt,omitempty"`
	SendTm         string `protobuf:"bytes,13,opt,name=send_tm,json=sendTm,proto3" json:"send_tm,omitempty"`
	ProductMyMoney string `protobuf:"bytes,14,opt,name=product_my_money,json=productMyMoney,proto3" json:"product_my_money,omitempty"`
	BuyMyMoney     string `protobuf:"bytes,15,opt,name=buy_my_money,json=buyMyMoney,proto3" json:"buy_my_money,omitempty"`
	DiscountRate   string `protobuf:"bytes,16,opt,name=discount_rate,json=discountRate,proto3" json:"discount_rate,omitempty"`
	BuyIpAddr      string `protobuf:"bytes,17,opt,name=buy_ip_addr,json=buyIpAddr,proto3" json:"buy_ip_addr,omitempty"`
	BuyLoginId     string `protobuf:"bytes,18,opt,name=buy_login_id,json=buyLoginId,proto3" json:"buy_login_id,omitempty"`
	BuyLoginName   string `protobuf:"bytes,19,opt,name=buy_login_name,json=buyLoginName,proto3" json:"buy_login_name,omitempty"`
	ReceiveTm      string `protobuf:"bytes,20,opt,name=receive_tm,json=receiveTm,proto3" json:"receive_tm,omitempty"`
}

func (x *Music) Reset() {
	*x = Music{}
	if protoimpl.UnsafeEnabled {
		mi := &file_music_music_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Music) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Music) ProtoMessage() {}

func (x *Music) ProtoReflect() protoreflect.Message {
	mi := &file_music_music_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Music.ProtoReflect.Descriptor instead.
func (*Music) Descriptor() ([]byte, []int) {
	return file_music_music_proto_rawDescGZIP(), []int{0}
}

func (x *Music) GetBuySeq() string {
	if x != nil {
		return x.BuySeq
	}
	return ""
}

func (x *Music) GetProductCd() string {
	if x != nil {
		return x.ProductCd
	}
	return ""
}

func (x *Music) GetBuyId() string {
	if x != nil {
		return x.BuyId
	}
	return ""
}

func (x *Music) GetProductSeq() string {
	if x != nil {
		return x.ProductSeq
	}
	return ""
}

func (x *Music) GetProductNm() string {
	if x != nil {
		return x.ProductNm
	}
	return ""
}

func (x *Music) GetBuyNm() string {
	if x != nil {
		return x.BuyNm
	}
	return ""
}

func (x *Music) GetBeforeMyMoney() string {
	if x != nil {
		return x.BeforeMyMoney
	}
	return ""
}

func (x *Music) GetSendStatus() string {
	if x != nil {
		return x.SendStatus
	}
	return ""
}

func (x *Music) GetProductCnt() string {
	if x != nil {
		return x.ProductCnt
	}
	return ""
}

func (x *Music) GetSendCnt() string {
	if x != nil {
		return x.SendCnt
	}
	return ""
}

func (x *Music) GetDenyCnt() string {
	if x != nil {
		return x.DenyCnt
	}
	return ""
}

func (x *Music) GetReceiveCnt() string {
	if x != nil {
		return x.ReceiveCnt
	}
	return ""
}

func (x *Music) GetSendTm() string {
	if x != nil {
		return x.SendTm
	}
	return ""
}

func (x *Music) GetProductMyMoney() string {
	if x != nil {
		return x.ProductMyMoney
	}
	return ""
}

func (x *Music) GetBuyMyMoney() string {
	if x != nil {
		return x.BuyMyMoney
	}
	return ""
}

func (x *Music) GetDiscountRate() string {
	if x != nil {
		return x.DiscountRate
	}
	return ""
}

func (x *Music) GetBuyIpAddr() string {
	if x != nil {
		return x.BuyIpAddr
	}
	return ""
}

func (x *Music) GetBuyLoginId() string {
	if x != nil {
		return x.BuyLoginId
	}
	return ""
}

func (x *Music) GetBuyLoginName() string {
	if x != nil {
		return x.BuyLoginName
	}
	return ""
}

func (x *Music) GetReceiveTm() string {
	if x != nil {
		return x.ReceiveTm
	}
	return ""
}

var File_music_music_proto protoreflect.FileDescriptor

var file_music_music_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x6f, 0x6d, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xff,
	0x04, 0x0a, 0x05, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x5f,
	0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x79, 0x53, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x75, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x75, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x6e, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x75, 0x79, 0x5f, 0x6e,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x79, 0x4e, 0x6d, 0x12, 0x26,
	0x0a, 0x0f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4d,
	0x79, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x63, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64,
	0x43, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6e, 0x79, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x6e, 0x79, 0x43, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x79, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x5f, 0x6d, 0x79, 0x5f, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x4d, 0x79, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x75, 0x79,
	0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x75, 0x79, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x75, 0x79,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62,
	0x75, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6d, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x6d,
	0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_music_music_proto_rawDescOnce sync.Once
	file_music_music_proto_rawDescData = file_music_music_proto_rawDesc
)

func file_music_music_proto_rawDescGZIP() []byte {
	file_music_music_proto_rawDescOnce.Do(func() {
		file_music_music_proto_rawDescData = protoimpl.X.CompressGZIP(file_music_music_proto_rawDescData)
	})
	return file_music_music_proto_rawDescData
}

var file_music_music_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_music_music_proto_goTypes = []interface{}{
	(*Music)(nil), // 0: some_body.Music
}
var file_music_music_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_music_music_proto_init() }
func file_music_music_proto_init() {
	if File_music_music_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_music_music_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Music); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_music_music_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_music_music_proto_goTypes,
		DependencyIndexes: file_music_music_proto_depIdxs,
		MessageInfos:      file_music_music_proto_msgTypes,
	}.Build()
	File_music_music_proto = out.File
	file_music_music_proto_rawDesc = nil
	file_music_music_proto_goTypes = nil
	file_music_music_proto_depIdxs = nil
}
